/*
 * MarvelComics.PCL
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 09/12/2016
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using MarvelComics.PCL;

namespace MarvelComics.PCL.Models
{
    public class Event : INotifyPropertyChanged 
    {
        // These fields hold the values for the public properties.
        private CharacterList characters;
        private ComicList comics;
        private CreatorList creators;
        private string description;
        private DateTime end;
        private int id;
        private DateTime modified;
        private EventSummary next;
        private EventSummary previous;
        private string resourceURI;
        private SeriesList series;
        private DateTime start;
        private StoryList stories;
        private Thumbnail thumbnail;
        private string title;
        private List<Url> urls;

        /// <summary>
        /// A resource list containing the characters which appear in this event.
        /// </summary>
        [JsonProperty("characters")]
        public CharacterList Characters 
        { 
            get 
            {
                return this.characters; 
            } 
            set 
            {
                this.characters = value;
                onPropertyChanged("Characters");
            }
        }

        /// <summary>
        /// A resource list containing the comics in this event.
        /// </summary>
        [JsonProperty("comics")]
        public ComicList Comics 
        { 
            get 
            {
                return this.comics; 
            } 
            set 
            {
                this.comics = value;
                onPropertyChanged("Comics");
            }
        }

        /// <summary>
        /// A resource list containing creators whose work appears in this event.
        /// </summary>
        [JsonProperty("creators")]
        public CreatorList Creators 
        { 
            get 
            {
                return this.creators; 
            } 
            set 
            {
                this.creators = value;
                onPropertyChanged("Creators");
            }
        }

        /// <summary>
        /// A description of the event.
        /// </summary>
        [JsonProperty("description")]
        public string Description 
        { 
            get 
            {
                return this.description; 
            } 
            set 
            {
                this.description = value;
                onPropertyChanged("Description");
            }
        }

        /// <summary>
        /// The date of publication of the last issue in this event.
        /// </summary>
        [JsonProperty("end")]
        public DateTime End 
        { 
            get 
            {
                return this.end; 
            } 
            set 
            {
                this.end = value;
                onPropertyChanged("End");
            }
        }

        /// <summary>
        /// The unique ID of the event resource.
        /// </summary>
        [JsonProperty("id")]
        public int Id 
        { 
            get 
            {
                return this.id; 
            } 
            set 
            {
                this.id = value;
                onPropertyChanged("Id");
            }
        }

        /// <summary>
        /// The date the resource was most recently modified.
        /// </summary>
        [JsonProperty("modified")]
        public DateTime Modified 
        { 
            get 
            {
                return this.modified; 
            } 
            set 
            {
                this.modified = value;
                onPropertyChanged("Modified");
            }
        }

        /// <summary>
        /// A summary representation of the event which follows this event.
        /// </summary>
        [JsonProperty("next")]
        public EventSummary Next 
        { 
            get 
            {
                return this.next; 
            } 
            set 
            {
                this.next = value;
                onPropertyChanged("Next");
            }
        }

        /// <summary>
        /// A summary representation of the event which preceded this event.
        /// </summary>
        [JsonProperty("previous")]
        public EventSummary Previous 
        { 
            get 
            {
                return this.previous; 
            } 
            set 
            {
                this.previous = value;
                onPropertyChanged("Previous");
            }
        }

        /// <summary>
        /// The canonical URL identifier for this resource.
        /// </summary>
        [JsonProperty("resourceURI")]
        public string ResourceURI 
        { 
            get 
            {
                return this.resourceURI; 
            } 
            set 
            {
                this.resourceURI = value;
                onPropertyChanged("ResourceURI");
            }
        }

        /// <summary>
        /// A resource list containing the series in this event.
        /// </summary>
        [JsonProperty("series")]
        public SeriesList Series 
        { 
            get 
            {
                return this.series; 
            } 
            set 
            {
                this.series = value;
                onPropertyChanged("Series");
            }
        }

        /// <summary>
        /// The date of publication of the first issue in this event.
        /// </summary>
        [JsonProperty("start")]
        public DateTime Start 
        { 
            get 
            {
                return this.start; 
            } 
            set 
            {
                this.start = value;
                onPropertyChanged("Start");
            }
        }

        /// <summary>
        /// A resource list containing the stories in this event.
        /// </summary>
        [JsonProperty("stories")]
        public StoryList Stories 
        { 
            get 
            {
                return this.stories; 
            } 
            set 
            {
                this.stories = value;
                onPropertyChanged("Stories");
            }
        }

        /// <summary>
        /// The representative image for this event.
        /// </summary>
        [JsonProperty("thumbnail")]
        public Thumbnail Thumbnail 
        { 
            get 
            {
                return this.thumbnail; 
            } 
            set 
            {
                this.thumbnail = value;
                onPropertyChanged("Thumbnail");
            }
        }

        /// <summary>
        /// The title of the event.
        /// </summary>
        [JsonProperty("title")]
        public string Title 
        { 
            get 
            {
                return this.title; 
            } 
            set 
            {
                this.title = value;
                onPropertyChanged("Title");
            }
        }

        /// <summary>
        /// A set of public web site URLs for the event.
        /// </summary>
        [JsonProperty("urls")]
        public List<Url> Urls 
        { 
            get 
            {
                return this.urls; 
            } 
            set 
            {
                this.urls = value;
                onPropertyChanged("Urls");
            }
        }

        /// <summary>
        /// Property changed event for observer pattern
        /// </summary>
        public event PropertyChangedEventHandler PropertyChanged;

        /// <summary>
        /// Raises event when a property is changed
        /// </summary>
        /// <param name="propertyName">Name of the changed property</param>
        protected void onPropertyChanged(String propertyName)
        {
            if (PropertyChanged != null)
            {
                PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }
} 