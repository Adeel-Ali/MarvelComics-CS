/*
 * MarvelComics.PCL
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 09/12/2016
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using MarvelComics.PCL;

namespace MarvelComics.PCL.Models
{
    public class EventDataWrapper : INotifyPropertyChanged 
    {
        // These fields hold the values for the public properties.
        private string attributionHTML;
        private string attributionText;
        private int code;
        private string copyright;
        private EventDataContainer data;
        private string etag;
        private string status;

        /// <summary>
        /// An HTML representation of the attribution notice for this result.  Please display either this notice or the contents of the attributionText field on all screens which contain data from the Marvel Comics API.
        /// </summary>
        [JsonProperty("attributionHTML")]
        public string AttributionHTML 
        { 
            get 
            {
                return this.attributionHTML; 
            } 
            set 
            {
                this.attributionHTML = value;
                onPropertyChanged("AttributionHTML");
            }
        }

        /// <summary>
        /// The attribution notice for this result.  Please display either this notice or the contents of the attributionHTML field on all screens which contain data from the Marvel Comics API.
        /// </summary>
        [JsonProperty("attributionText")]
        public string AttributionText 
        { 
            get 
            {
                return this.attributionText; 
            } 
            set 
            {
                this.attributionText = value;
                onPropertyChanged("AttributionText");
            }
        }

        /// <summary>
        /// The HTTP status code of the returned result.
        /// </summary>
        [JsonProperty("code")]
        public int Code 
        { 
            get 
            {
                return this.code; 
            } 
            set 
            {
                this.code = value;
                onPropertyChanged("Code");
            }
        }

        /// <summary>
        /// The copyright notice for the returned result.
        /// </summary>
        [JsonProperty("copyright")]
        public string Copyright 
        { 
            get 
            {
                return this.copyright; 
            } 
            set 
            {
                this.copyright = value;
                onPropertyChanged("Copyright");
            }
        }

        /// <summary>
        /// The results returned by the call.
        /// </summary>
        [JsonProperty("data")]
        public EventDataContainer Data 
        { 
            get 
            {
                return this.data; 
            } 
            set 
            {
                this.data = value;
                onPropertyChanged("Data");
            }
        }

        /// <summary>
        /// A digest value of the content returned by the call.
        /// </summary>
        [JsonProperty("etag")]
        public string Etag 
        { 
            get 
            {
                return this.etag; 
            } 
            set 
            {
                this.etag = value;
                onPropertyChanged("Etag");
            }
        }

        /// <summary>
        /// A string description of the call status.
        /// </summary>
        [JsonProperty("status")]
        public string Status 
        { 
            get 
            {
                return this.status; 
            } 
            set 
            {
                this.status = value;
                onPropertyChanged("Status");
            }
        }

        /// <summary>
        /// Property changed event for observer pattern
        /// </summary>
        public event PropertyChangedEventHandler PropertyChanged;

        /// <summary>
        /// Raises event when a property is changed
        /// </summary>
        /// <param name="propertyName">Name of the changed property</param>
        protected void onPropertyChanged(String propertyName)
        {
            if (PropertyChanged != null)
            {
                PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }
} 