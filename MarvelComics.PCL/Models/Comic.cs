/*
 * MarvelComics.PCL
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 09/12/2016
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using MarvelComics.PCL;

namespace MarvelComics.PCL.Models
{
    public class Comic : INotifyPropertyChanged 
    {
        // These fields hold the values for the public properties.
        private CharacterList characters;
        private List<ComicSummary> collectedIssues;
        private List<ComicSummary> collections;
        private CreatorList creators;
        private List<ComicDate> dates;
        private string description;
        private string diamondCode;
        private int digitalId;
        private string ean;
        private EventList events;
        private string format;
        private int id;
        private List<Image> images;
        private string isbn;
        private string issn;
        private int issueNumber;
        private DateTime modified;
        private int pageCount;
        private List<ComicPrice> prices;
        private string resourceURI;
        private SeriesSummary series;
        private StoryList stories;
        private List<TextObject> textObjects;
        private Thumbnail thumbnail;
        private string title;
        private string upc;
        private List<Url> urls;
        private string variantDescription;
        private List<ComicSummary> variants;

        /// <summary>
        /// A resource list containing the characters which appear in this comic.
        /// </summary>
        [JsonProperty("characters")]
        public CharacterList Characters 
        { 
            get 
            {
                return this.characters; 
            } 
            set 
            {
                this.characters = value;
                onPropertyChanged("Characters");
            }
        }

        /// <summary>
        /// A list of issues collected in this comic (will generally be empty for periodical formats such as "comic" or "magazine").
        /// </summary>
        [JsonProperty("collectedIssues")]
        public List<ComicSummary> CollectedIssues 
        { 
            get 
            {
                return this.collectedIssues; 
            } 
            set 
            {
                this.collectedIssues = value;
                onPropertyChanged("CollectedIssues");
            }
        }

        /// <summary>
        /// A list of collections which include this comic (will generally be empty if the comic's format is a collection).
        /// </summary>
        [JsonProperty("collections")]
        public List<ComicSummary> Collections 
        { 
            get 
            {
                return this.collections; 
            } 
            set 
            {
                this.collections = value;
                onPropertyChanged("Collections");
            }
        }

        /// <summary>
        /// A resource list containing the creators associated with this comic.
        /// </summary>
        [JsonProperty("creators")]
        public CreatorList Creators 
        { 
            get 
            {
                return this.creators; 
            } 
            set 
            {
                this.creators = value;
                onPropertyChanged("Creators");
            }
        }

        /// <summary>
        /// A list of key dates for this comic.
        /// </summary>
        [JsonProperty("dates")]
        public List<ComicDate> Dates 
        { 
            get 
            {
                return this.dates; 
            } 
            set 
            {
                this.dates = value;
                onPropertyChanged("Dates");
            }
        }

        /// <summary>
        /// The preferred description of the comic.
        /// </summary>
        [JsonProperty("description")]
        public string Description 
        { 
            get 
            {
                return this.description; 
            } 
            set 
            {
                this.description = value;
                onPropertyChanged("Description");
            }
        }

        /// <summary>
        /// The Diamond code for the comic.
        /// </summary>
        [JsonProperty("diamondCode")]
        public string DiamondCode 
        { 
            get 
            {
                return this.diamondCode; 
            } 
            set 
            {
                this.diamondCode = value;
                onPropertyChanged("DiamondCode");
            }
        }

        /// <summary>
        /// The ID of the digital comic representation of this comic. Will be 0 if the comic is not available digitally.
        /// </summary>
        [JsonProperty("digitalId")]
        public int DigitalId 
        { 
            get 
            {
                return this.digitalId; 
            } 
            set 
            {
                this.digitalId = value;
                onPropertyChanged("DigitalId");
            }
        }

        /// <summary>
        /// The EAN barcode for the comic.
        /// </summary>
        [JsonProperty("ean")]
        public string Ean 
        { 
            get 
            {
                return this.ean; 
            } 
            set 
            {
                this.ean = value;
                onPropertyChanged("Ean");
            }
        }

        /// <summary>
        /// A resource list containing the events in which this comic appears.
        /// </summary>
        [JsonProperty("events")]
        public EventList Events 
        { 
            get 
            {
                return this.events; 
            } 
            set 
            {
                this.events = value;
                onPropertyChanged("Events");
            }
        }

        /// <summary>
        /// The publication format of the comic e.g. comic, hardcover, trade paperback.
        /// </summary>
        [JsonProperty("format")]
        public string Format 
        { 
            get 
            {
                return this.format; 
            } 
            set 
            {
                this.format = value;
                onPropertyChanged("Format");
            }
        }

        /// <summary>
        /// The unique ID of the comic resource.
        /// </summary>
        [JsonProperty("id")]
        public int Id 
        { 
            get 
            {
                return this.id; 
            } 
            set 
            {
                this.id = value;
                onPropertyChanged("Id");
            }
        }

        /// <summary>
        /// A list of promotional images associated with this comic.
        /// </summary>
        [JsonProperty("images")]
        public List<Image> Images 
        { 
            get 
            {
                return this.images; 
            } 
            set 
            {
                this.images = value;
                onPropertyChanged("Images");
            }
        }

        /// <summary>
        /// The ISBN for the comic (generally only populated for collection formats).
        /// </summary>
        [JsonProperty("isbn")]
        public string Isbn 
        { 
            get 
            {
                return this.isbn; 
            } 
            set 
            {
                this.isbn = value;
                onPropertyChanged("Isbn");
            }
        }

        /// <summary>
        /// The ISSN barcode for the comic.
        /// </summary>
        [JsonProperty("issn")]
        public string Issn 
        { 
            get 
            {
                return this.issn; 
            } 
            set 
            {
                this.issn = value;
                onPropertyChanged("Issn");
            }
        }

        /// <summary>
        /// The number of the issue in the series (will generally be 0 for collection formats).
        /// </summary>
        [JsonProperty("issueNumber")]
        public int IssueNumber 
        { 
            get 
            {
                return this.issueNumber; 
            } 
            set 
            {
                this.issueNumber = value;
                onPropertyChanged("IssueNumber");
            }
        }

        /// <summary>
        /// The date the resource was most recently modified.
        /// </summary>
        [JsonProperty("modified")]
        public DateTime Modified 
        { 
            get 
            {
                return this.modified; 
            } 
            set 
            {
                this.modified = value;
                onPropertyChanged("Modified");
            }
        }

        /// <summary>
        /// The number of story pages in the comic.
        /// </summary>
        [JsonProperty("pageCount")]
        public int PageCount 
        { 
            get 
            {
                return this.pageCount; 
            } 
            set 
            {
                this.pageCount = value;
                onPropertyChanged("PageCount");
            }
        }

        /// <summary>
        /// A list of prices for this comic.
        /// </summary>
        [JsonProperty("prices")]
        public List<ComicPrice> Prices 
        { 
            get 
            {
                return this.prices; 
            } 
            set 
            {
                this.prices = value;
                onPropertyChanged("Prices");
            }
        }

        /// <summary>
        /// The canonical URL identifier for this resource.
        /// </summary>
        [JsonProperty("resourceURI")]
        public string ResourceURI 
        { 
            get 
            {
                return this.resourceURI; 
            } 
            set 
            {
                this.resourceURI = value;
                onPropertyChanged("ResourceURI");
            }
        }

        /// <summary>
        /// A summary representation of the series to which this comic belongs.
        /// </summary>
        [JsonProperty("series")]
        public SeriesSummary Series 
        { 
            get 
            {
                return this.series; 
            } 
            set 
            {
                this.series = value;
                onPropertyChanged("Series");
            }
        }

        /// <summary>
        /// A resource list containing the stories which appear in this comic.
        /// </summary>
        [JsonProperty("stories")]
        public StoryList Stories 
        { 
            get 
            {
                return this.stories; 
            } 
            set 
            {
                this.stories = value;
                onPropertyChanged("Stories");
            }
        }

        /// <summary>
        /// A set of descriptive text blurbs for the comic.
        /// </summary>
        [JsonProperty("textObjects")]
        public List<TextObject> TextObjects 
        { 
            get 
            {
                return this.textObjects; 
            } 
            set 
            {
                this.textObjects = value;
                onPropertyChanged("TextObjects");
            }
        }

        /// <summary>
        /// The representative image for this comic.
        /// </summary>
        [JsonProperty("thumbnail")]
        public Thumbnail Thumbnail 
        { 
            get 
            {
                return this.thumbnail; 
            } 
            set 
            {
                this.thumbnail = value;
                onPropertyChanged("Thumbnail");
            }
        }

        /// <summary>
        /// The canonical title of the comic.
        /// </summary>
        [JsonProperty("title")]
        public string Title 
        { 
            get 
            {
                return this.title; 
            } 
            set 
            {
                this.title = value;
                onPropertyChanged("Title");
            }
        }

        /// <summary>
        /// The UPC barcode number for the comic (generally only populated for periodical formats).
        /// </summary>
        [JsonProperty("upc")]
        public string Upc 
        { 
            get 
            {
                return this.upc; 
            } 
            set 
            {
                this.upc = value;
                onPropertyChanged("Upc");
            }
        }

        /// <summary>
        /// A set of public web site URLs for the resource.
        /// </summary>
        [JsonProperty("urls")]
        public List<Url> Urls 
        { 
            get 
            {
                return this.urls; 
            } 
            set 
            {
                this.urls = value;
                onPropertyChanged("Urls");
            }
        }

        /// <summary>
        /// If the issue is a variant (e.g. an alternate cover, second printing, or director’s cut), a text description of the variant.
        /// </summary>
        [JsonProperty("variantDescription")]
        public string VariantDescription 
        { 
            get 
            {
                return this.variantDescription; 
            } 
            set 
            {
                this.variantDescription = value;
                onPropertyChanged("VariantDescription");
            }
        }

        /// <summary>
        /// A list of variant issues for this comic (includes the "original" issue if the current issue is a variant).
        /// </summary>
        [JsonProperty("variants")]
        public List<ComicSummary> Variants 
        { 
            get 
            {
                return this.variants; 
            } 
            set 
            {
                this.variants = value;
                onPropertyChanged("Variants");
            }
        }

        /// <summary>
        /// Property changed event for observer pattern
        /// </summary>
        public event PropertyChangedEventHandler PropertyChanged;

        /// <summary>
        /// Raises event when a property is changed
        /// </summary>
        /// <param name="propertyName">Name of the changed property</param>
        protected void onPropertyChanged(String propertyName)
        {
            if (PropertyChanged != null)
            {
                PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }
} 