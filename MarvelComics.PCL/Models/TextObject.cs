/*
 * MarvelComics.PCL
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 09/12/2016
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using MarvelComics.PCL;

namespace MarvelComics.PCL.Models
{
    public class TextObject : INotifyPropertyChanged 
    {
        // These fields hold the values for the public properties.
        private string language;
        private string text;
        private string type;

        /// <summary>
        /// The IETF language tag denoting the language the text object is written in.
        /// </summary>
        [JsonProperty("language")]
        public string Language 
        { 
            get 
            {
                return this.language; 
            } 
            set 
            {
                this.language = value;
                onPropertyChanged("Language");
            }
        }

        /// <summary>
        /// The text.
        /// </summary>
        [JsonProperty("text")]
        public string Text 
        { 
            get 
            {
                return this.text; 
            } 
            set 
            {
                this.text = value;
                onPropertyChanged("Text");
            }
        }

        /// <summary>
        /// The canonical type of the text object (e.g. solicit text, preview text, etc.).
        /// </summary>
        [JsonProperty("type")]
        public string Type 
        { 
            get 
            {
                return this.type; 
            } 
            set 
            {
                this.type = value;
                onPropertyChanged("Type");
            }
        }

        /// <summary>
        /// Property changed event for observer pattern
        /// </summary>
        public event PropertyChangedEventHandler PropertyChanged;

        /// <summary>
        /// Raises event when a property is changed
        /// </summary>
        /// <param name="propertyName">Name of the changed property</param>
        protected void onPropertyChanged(String propertyName)
        {
            if (PropertyChanged != null)
            {
                PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }
} 